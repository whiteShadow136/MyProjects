https://www.w3cschool.cn/hibernate/mi291ie7.html
BITO插件
spring源码
https://www.bilibili.com/video/BV1zN4y1g779/?p=6&spm_id_from=pageDriver&vd_source=1ecf8f5436d67a394f7310abee50bbd8

springMVC源码
https://www.bilibili.com/video/BV1mK411r7vb/?p=3&spm_id_from=pageDriver&vd_source=1ecf8f5436d67a394f7310abee50bbd8


redis
https://juejin.cn/post/7076244567569203208
怎么理解那个需求，反正就是入参里面传了rdmDeleteFlag,就把默认拼接得的rdmdeleteflag去掉，毕竟我要做到的就是用户传了这个参数，就让用户去自定义查找，
不再拼默认的内容。
https://www.bilibili.com/video/BV18E411e7WJ/?vd_source=2ac6e1ae005f1ca29c98caa66c9f86a4
https://github.com/whiteShadow136/mini-spring.git

要做的事：
  1. 在loadagent...里面的分布式锁那里刷缓存。
  不对，无论是哪个应用刷元数据，都得刷关系缓存。没关系，就直接放在元数据之后刷就是了。

  ognl --classLoaderClass com.taobao.arthas.agent.ArthasClassloader '#a=@com.taobao.arthas.core.server.ArthasBootstrap@getInstance(),#a.shellServer.commandManager' -x 4
  org.springframework.boot.SpringApplication.callRunners

 优化启动速度的方法
 1. hibernate的。。。改为none
 2. 能不能让启动类只扫描特地的需要的bean，像应用发布的bean应该是比较独立的，可以启动时指定扫描应用发布的包。
 3. 对于一些初始化的对象，先持久化起来，后面直接拿来用，可以放到redis里，或者本地磁盘。
 4. 有时间的话看看火焰图，看到底是哪些方面导致了启动慢。
 5. 应用发布调试慢，主要在于生成generateBean慢，可以在生成这些bean的时候，只生成BasicObject的和自己应用的类。
 6. 为什么java的序列化需要实现serialization接口，而redis的序列化不需要，序列化怎么理解。
 7. 代码生成的多值，还是将参考多值和枚举多值都从源头视为String处理，然后在后面自己写去生成JSONArray的逻辑，还有对于枚举的默认值，要处理一下。

https://www.cnblogs.com/javastack/p/17308988.html

 感觉这跟服务太多占用内存没大关系，idea内存跟自己服务的内存是不相关的。微服务的项目，在启动的时候卡顿是因为要扫描的文件太多导致的，把configuration里的shorten command line设成classpath，你会发现启动项目快的飞起

 List<Object> parameters = new ArrayList<>();
 parameters.add(1);
 List<Object> list = new ArrayList<>();
 list.add(2);
 list.add("3");
 parameters.add(list);
 String pattern = "Welcome, {0}! Today is {1}.";
 String formattedMessage = MessageFormat.format(pattern, parameters.toArray());